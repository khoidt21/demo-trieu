{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport groupApi from \"../../api/GroupApi\";\nimport { GET_LIST_GROUP } from \"../actionTypes\";\nexport const getListGroupAsyncAction = createAsyncThunk(GET_LIST_GROUP, async () => {\n  const groups = await groupApi.getAll();\n  return groups;\n});\nconst groupSlide = createSlice({\n  name: 'group',\n  initialState: {\n    groups: [],\n    isLoading: false\n  },\n  reducers: {// other reducers\n  },\n  extraReducers: {\n    [getListGroupAsyncAction.fulfilled]: (state, action) => {\n      state.groups = action.payload;\n      state.isLoading = false;\n    },\n    [getListGroupAsyncAction.pending]: state => {\n      state.isLoading = true;\n    }\n  }\n});\nexport const {\n  actions,\n  reducer\n} = groupSlide;\nexport const {\n  incremented,\n  decremented\n} = actions;\nexport default groupSlide;","map":{"version":3,"names":["createSlice","createAsyncThunk","groupApi","GET_LIST_GROUP","getListGroupAsyncAction","groups","getAll","groupSlide","name","initialState","isLoading","reducers","extraReducers","fulfilled","state","action","payload","pending","actions","reducer","incremented","decremented"],"sources":["/Users/tuankhoi/Desktop/Demo_deployFE/demo-app/src/redux/reducers/groupSlide.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport groupApi from \"../../api/GroupApi\";\r\nimport { GET_LIST_GROUP } from \"../actionTypes\";\r\n\r\nexport const getListGroupAsyncAction = createAsyncThunk(\r\n    GET_LIST_GROUP,\r\n    async () => {\r\n        const groups = await groupApi.getAll();\r\n        return groups;\r\n    }\r\n);\r\n\r\nconst groupSlide = createSlice({\r\n    name: 'group',\r\n    initialState: {\r\n        groups: [],\r\n        isLoading: false\r\n    },\r\n    reducers: {\r\n        // other reducers\r\n    },\r\n    extraReducers: {\r\n        [getListGroupAsyncAction.fulfilled]: (state, action) => {\r\n            state.groups = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        [getListGroupAsyncAction.pending]: (state) => {\r\n            state.isLoading = true;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { actions, reducer } = groupSlide;\r\nexport const { incremented, decremented } = actions;\r\n\r\nexport default groupSlide;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAO,MAAMC,uBAAuB,GAAGH,gBAAgB,CACnDE,cADmD,EAEnD,YAAY;EACR,MAAME,MAAM,GAAG,MAAMH,QAAQ,CAACI,MAAT,EAArB;EACA,OAAOD,MAAP;AACH,CALkD,CAAhD;AAQP,MAAME,UAAU,GAAGP,WAAW,CAAC;EAC3BQ,IAAI,EAAE,OADqB;EAE3BC,YAAY,EAAE;IACVJ,MAAM,EAAE,EADE;IAEVK,SAAS,EAAE;EAFD,CAFa;EAM3BC,QAAQ,EAAE,CACN;EADM,CANiB;EAS3BC,aAAa,EAAE;IACX,CAACR,uBAAuB,CAACS,SAAzB,GAAqC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACpDD,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAtB;MACAF,KAAK,CAACJ,SAAN,GAAkB,KAAlB;IACH,CAJU;IAKX,CAACN,uBAAuB,CAACa,OAAzB,GAAoCH,KAAD,IAAW;MAC1CA,KAAK,CAACJ,SAAN,GAAkB,IAAlB;IACH;EAPU;AATY,CAAD,CAA9B;AAoBA,OAAO,MAAM;EAAEQ,OAAF;EAAWC;AAAX,IAAuBZ,UAA7B;AACP,OAAO,MAAM;EAAEa,WAAF;EAAeC;AAAf,IAA+BH,OAArC;AAEP,eAAeX,UAAf"},"metadata":{},"sourceType":"module"}