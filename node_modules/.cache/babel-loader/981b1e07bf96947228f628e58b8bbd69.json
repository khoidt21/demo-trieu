{"ast":null,"code":"import axios from 'axios';\nconst axiosClient = axios.create({\n  baseURL: `http://localhost:8080/GroupManagement/api/v1`,\n  timeout: 5000,\n  // default is `0` (no timeout)\n  responseType: 'json'\n});\naxiosClient.interceptors.request.use(async config => {\n  // Handle token here ...\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  if (response && response.data) {\n    // only get data\n    return response.data;\n  }\n\n  return response;\n}, error => {\n  // Handle errors\n  throw error;\n});\nexport default axiosClient;","map":{"version":3,"names":["axios","axiosClient","create","baseURL","timeout","responseType","interceptors","request","use","config","response","data","error"],"sources":["/Users/tuankhoi/Desktop/Demo_deployFE/demo-app/src/api/Api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: `http://localhost:8080/GroupManagement/api/v1`,\r\n    timeout: 5000, // default is `0` (no timeout)\r\n    responseType: 'json'\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // Handle token here ...\r\n    return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        // only get data\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC7BC,OAAO,EAAG,8CADmB;EAE7BC,OAAO,EAAE,IAFoB;EAEd;EACfC,YAAY,EAAE;AAHe,CAAb,CAApB;AAMAJ,WAAW,CAACK,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,MAAOC,MAAP,IAAkB;EACnD;EACA,OAAOA,MAAP;AACH,CAHD;AAKAR,WAAW,CAACK,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CAAuCE,QAAD,IAAc;EAChD,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;IAC3B;IACA,OAAOD,QAAQ,CAACC,IAAhB;EACH;;EAED,OAAOD,QAAP;AACH,CAPD,EAOIE,KAAD,IAAW;EACV;EACA,MAAMA,KAAN;AACH,CAVD;AAYA,eAAeX,WAAf"},"metadata":{},"sourceType":"module"}